{"version":3,"sources":["Footer.js","App.js","index.js"],"names":["Footer","className","href","target","rel","App","props","addTodo","bind","handleMenuClick","handleCheckbox","deleteAll","deleteOne","list","retrieveFromLocalStorage","todo","completed","state","todoList","inputText","currentMenu","localStorage","setItem","JSON","stringify","this","parse","getItem","setState","saveToLocalStorage","index","map","item","i","filter","e","dataset","name","onClick","type","checked","onChange","data-name","placeholder","value","event","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c072a80.chunk.js","sourcesContent":["import './Footer.scss'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <p className=\"footer\">Created by <a href=\"https://github.com/camain-elie\" target=\"_blank\" rel=\"noreferrer\" className=\"footer__link\">Elie C.</a> - devChallenge.io</p>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Component } from 'react'\nimport './App.scss'\nimport Footer from './Footer'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.addTodo = this.addTodo.bind(this)\n    this.handleMenuClick = this.handleMenuClick.bind(this)\n    this.handleCheckbox = this.handleCheckbox.bind(this)\n    this.deleteAll = this.deleteAll.bind(this)\n    this.deleteOne = this.deleteOne.bind(this)\n\n    let list = this.retrieveFromLocalStorage()\n    if(!list){\n      list = [\n        {\n          todo: \"Do coding challenges\",\n          completed: false\n        },\n        {\n          todo: \"Do coding challenges\",\n          completed: false\n        },\n        {\n          todo: \"Task completed\",\n          completed: true\n        },\n      ]\n    }\n\n    this.state={\n      todoList: list,\n      inputText: '',\n      currentMenu: 'all',\n    }\n  }\n\n  saveToLocalStorage(){\n    localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList))\n  }\n\n  retrieveFromLocalStorage(){\n    return JSON.parse(localStorage.getItem(\"todoList\"))\n  }\n\n  addTodo(){\n    if(this.state.inputText){\n      this.setState({\n        todoList: [...this.state.todoList,{todo: this.state.inputText, completed: false}],\n        inputText: '',\n      }, () => {this.saveToLocalStorage()})\n    }\n  }\n\n  handleCheckbox(index){\n    const list = this.state.todoList.map((item, i) => {\n      if (index === i) {\n        return {todo: item.todo, completed: !item.completed}\n      } else {\n        return item\n      }\n    })\n    this.setState({ todoList: list }, () => this.saveToLocalStorage())\n  }\n\n  deleteOne(index){\n    const list = this.state.todoList.filter((item, i) => index !== i)\n    this.setState({ todoList: list }, () => this.saveToLocalStorage())\n  }\n\n  deleteAll(){\n    const list = this.state.todoList.filter((item) => !item.completed)\n    this.setState({ todoList: list}, () => this.saveToLocalStorage())\n  }\n\n  handleMenuClick(e){\n    this.setState({ currentMenu: e.target.dataset.name })\n  }\n\n  render(){\n    \n    const todoList = this.state.todoList.map((item, index) => {\n\n      return(\n        <li className={`todo ${item.completed ? 'todo--completed' : ''} \n          ${(this.state.currentMenu === 'active' && item.completed ) || (this.state.currentMenu === 'completed' && !item.completed) ? 'disabled' : ''}`}\n          key={index}\n        >\n          <div className=\"checkbox-container\" onClick={() => this.handleCheckbox(index)}>\n            <input type=\"checkbox\" checked={item.completed} onChange={() => this.handleCheckbox(index)}></input>\n            <span className=\"checkbox-checkmark\"></span>\n          </div>\n          <p>{item.todo}</p>\n          <div className=\"material-icons todo__delete\" onClick={() => this.deleteOne(index)}>clear</div>\n        </li>\n      )\n    })\n    \n    return(\n      <div className=\"app\">\n\n        <h1>#todo</h1>\n\n        <div className=\"menu\">\n          <ul>\n            <li className={this.state.currentMenu === 'all' ? 'menu-active' : ''} data-name=\"all\" onClick={this.handleMenuClick}>All</li>\n            <li className={this.state.currentMenu === 'active' ? 'menu-active' : ''} data-name=\"active\" onClick={this.handleMenuClick}>Active</li>\n            <li className={this.state.currentMenu === 'completed' ? 'menu-active' : ''} data-name=\"completed\" onClick={this.handleMenuClick}>Completed</li>\n          </ul>\n        </div>\n\n        <div className={`todo__input ${this.state.currentMenu !== 'completed' ? '' : 'disabled'}`}>\n          <input placeholder=\"Add details\" className=\"todo__add-input\" type=\"text\" value={this.state.inputText} onChange={(event) => this.setState({ inputText: event.target.value})} />\n          <button className=\"todo__add-button\" onClick={this.addTodo}>Add</button>\n        </div>\n        \n        <div className=\"todo-list\">\n          {todoList}\n          <div className={`todo-list__delete-all ${this.state.currentMenu === 'completed' ? '' : 'disabled'}`}>\n            <button onClick={this.deleteAll}><p className=\"todo-list__delete-all-text\"><span className=\"material-icons-outlined\">delete</span>Delete all</p></button>\n          </div>\n        </div>\n        \n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}